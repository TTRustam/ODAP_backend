% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/graduate_data_first_go.R
\name{graduate_auto}
\alias{graduate_auto}
\title{graduate_auto}
\usage{
graduate_auto(
  data_in,
  age_out = NULL,
  variable = NULL,
  u5m = NULL,
  Sex = "t",
  constrain_infants = TRUE
)
}
\arguments{
\item{data_in}{tibble. A tibble with two numeric columns - \code{Pop} or any other column with population or death counts and corresponding \code{Age} - provided in single age intervals, 5-year age intervals, or abridged age format e.g. with ages 0, 1-4, 5-9 etc.}

\item{age_out}{character. A scalar with the desired age grouping output. Includes 3 possible options - \code{"single"} for single ages, \code{"5-year"} - for 5-year age groups, and \code{"abridged"} - for abridged data.}

\item{variable}{character. A scalar with the variable name which is to be graduated. For example \code{"Pop"} or \code{"Death"}, or \code{"Exposures"}.}

\item{u5m}{numeric. Under five mortality rate.}

\item{Sex}{character. Either \code{"m"} for males, \code{"f"} for females, or \code{"t"} for total (defualt).}

\item{constrain_infants}{logical. A scalar indicating weather the infant proportions should be constrained or left as is.}
}
\value{
data_out. A tibble with two numeric columns - smoothed counts for the chosen variable and \code{Age} - chosen age grouping
}
\description{
Smooth population or death counts with moving averages. The method was adopted from the "Method protocol for the evaluation of census population data by age and sex" paragraph 5.
}
\examples{
fpath <- system.file("extdata",
"dat_heap_smooth.csv",
package = "ODAPbackend")

data_in <- read.csv(fpath)

ex1 <- graduate_auto(
data_in,
age_out  = "5-year",
variable = "Deaths",
u5m      = NULL,
Sex      = "t",
constrain_infants = FALSE)

ex2 <- graduate_auto(
data_in,
age_out  = "abridged",
variable = "Exposures",
u5m      = NULL,
Sex      = "t",
constrain_infants = FALSE
)

ex3 <- graduate_auto(
data_in,
age_out  = "single",
variable = "Population",
u5m      = NULL,
Sex      = "t",
constrain_infants = TRUE
)
}
